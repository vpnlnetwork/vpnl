name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

permissions:
  contents: read
  security-events: write  # for SARIF upload (slither)

jobs:
  build-test-lint:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Cache npm
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install JS deps (if present)
        if: hashFiles('**/package.json') != ''
        run: npm ci

      - name: Lint Solidity with solhint (if config present)
        if: hashFiles('.solhint.json') != '' || hashFiles('.solhint.jsonc') != ''
        run: npx solhint 'contracts/**/*.sol'

      - name: Setup Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Foundry build
        run: forge build --sizes

      - name: Foundry tests
        run: forge test -vvv

      - name: Generate coverage (best-effort)
        run: |
          forge coverage --report lcov || echo "coverage optional"

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: lcov.info
          path: lcov.info
          if-no-files-found: ignore

      - name: Static analysis with Slither (advisory)
        uses: crytic/slither-action@v0.3.1
        continue-on-error: true
        with:
          target: .
          solc-version: 0.8.23
          sarif: true

      - name: Upload Slither SARIF (advisory)
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: slither.sarif
